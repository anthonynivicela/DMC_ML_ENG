2025-06-09 22:06:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:06:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:06:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:06:35,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:06:37,980:INFO:PyCaret RegressionExperiment
2025-06-09 22:06:37,980:INFO:Logging name: prediccion_precio_propiedades
2025-06-09 22:06:37,981:INFO:ML Usecase: MLUsecase.REGRESSION
2025-06-09 22:06:37,981:INFO:version 3.2.0
2025-06-09 22:06:37,981:INFO:Initializing setup()
2025-06-09 22:06:37,981:INFO:self.USI: ed60
2025-06-09 22:06:37,981:INFO:self._variable_keys: {'_ml_usecase', 'gpu_n_jobs_param', 'X_test', 'pipeline', 'log_plots_param', 'y_test', 'y_train', 'y', 'fold_shuffle_param', 'fold_groups_param', 'idx', '_available_plots', 'n_jobs_param', 'exp_name_log', 'html_param', 'exp_id', 'X', 'transform_target_param', 'fold_generator', 'memory', 'seed', 'X_train', 'gpu_param', 'target_param', 'data', 'logging_param', 'USI'}
2025-06-09 22:06:37,981:INFO:Checking environment
2025-06-09 22:06:37,981:INFO:python_version: 3.11.8
2025-06-09 22:06:37,981:INFO:python_build: ('tags/v3.11.8:db85d51', 'Feb  6 2024 22:03:32')
2025-06-09 22:06:37,981:INFO:machine: AMD64
2025-06-09 22:06:37,991:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-09 22:06:37,996:INFO:Memory: svmem(total=16907886592, available=3803938816, percent=77.5, used=13103947776, free=3803938816)
2025-06-09 22:06:37,996:INFO:Physical Core: 4
2025-06-09 22:06:37,996:INFO:Logical Core: 8
2025-06-09 22:06:37,996:INFO:Checking libraries
2025-06-09 22:06:37,996:INFO:System:
2025-06-09 22:06:37,996:INFO:    python: 3.11.8 (tags/v3.11.8:db85d51, Feb  6 2024, 22:03:32) [MSC v.1937 64 bit (AMD64)]
2025-06-09 22:06:37,997:INFO:executable: C:\Users\User\AppData\Local\Programs\Python\Python311\python.exe
2025-06-09 22:06:37,997:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-09 22:06:37,997:INFO:PyCaret required dependencies:
2025-06-09 22:06:38,599:INFO:                 pip: 24.0
2025-06-09 22:06:38,599:INFO:          setuptools: 65.5.0
2025-06-09 22:06:38,599:INFO:             pycaret: 3.2.0
2025-06-09 22:06:38,599:INFO:             IPython: 9.2.0
2025-06-09 22:06:38,599:INFO:          ipywidgets: 8.1.7
2025-06-09 22:06:38,599:INFO:                tqdm: 4.67.1
2025-06-09 22:06:38,599:INFO:               numpy: 1.25.2
2025-06-09 22:06:38,599:INFO:              pandas: 1.5.3
2025-06-09 22:06:38,599:INFO:              jinja2: 3.1.6
2025-06-09 22:06:38,600:INFO:               scipy: 1.10.1
2025-06-09 22:06:38,600:INFO:              joblib: 1.3.2
2025-06-09 22:06:38,600:INFO:             sklearn: 1.2.2
2025-06-09 22:06:38,600:INFO:                pyod: 2.0.5
2025-06-09 22:06:38,600:INFO:            imblearn: 0.12.4
2025-06-09 22:06:38,600:INFO:   category_encoders: 2.7.0
2025-06-09 22:06:38,600:INFO:            lightgbm: 4.6.0
2025-06-09 22:06:38,600:INFO:               numba: 0.58.1
2025-06-09 22:06:38,600:INFO:            requests: 2.32.3
2025-06-09 22:06:38,600:INFO:          matplotlib: 3.6.0
2025-06-09 22:06:38,600:INFO:          scikitplot: 0.3.7
2025-06-09 22:06:38,600:INFO:         yellowbrick: 1.5
2025-06-09 22:06:38,600:INFO:              plotly: 5.24.1
2025-06-09 22:06:38,600:INFO:    plotly-resampler: Not installed
2025-06-09 22:06:38,600:INFO:             kaleido: 0.2.1
2025-06-09 22:06:38,601:INFO:           schemdraw: 0.15
2025-06-09 22:06:38,601:INFO:         statsmodels: 0.14.4
2025-06-09 22:06:38,601:INFO:              sktime: 0.21.1
2025-06-09 22:06:38,601:INFO:               tbats: 1.1.3
2025-06-09 22:06:38,601:INFO:            pmdarima: 2.0.4
2025-06-09 22:06:38,601:INFO:              psutil: 7.0.0
2025-06-09 22:06:38,601:INFO:          markupsafe: 2.1.5
2025-06-09 22:06:38,601:INFO:             pickle5: Not installed
2025-06-09 22:06:38,601:INFO:         cloudpickle: 2.2.1
2025-06-09 22:06:38,601:INFO:         deprecation: 2.1.0
2025-06-09 22:06:38,601:INFO:              xxhash: 3.5.0
2025-06-09 22:06:38,601:INFO:           wurlitzer: Not installed
2025-06-09 22:06:38,601:INFO:PyCaret optional dependencies:
2025-06-09 22:06:40,543:INFO:                shap: 0.44.1
2025-06-09 22:06:40,543:INFO:           interpret: 0.6.10
2025-06-09 22:06:40,543:INFO:                umap: 0.5.7
2025-06-09 22:06:40,543:INFO:     ydata_profiling: 4.6.0
2025-06-09 22:06:40,543:INFO:  explainerdashboard: 0.4.8
2025-06-09 22:06:40,543:INFO:             autoviz: Not installed
2025-06-09 22:06:40,543:INFO:           fairlearn: 0.7.0
2025-06-09 22:06:40,543:INFO:          deepchecks: Not installed
2025-06-09 22:06:40,543:INFO:             xgboost: Not installed
2025-06-09 22:06:40,543:INFO:            catboost: 1.2.8
2025-06-09 22:06:40,543:INFO:              kmodes: 0.12.2
2025-06-09 22:06:40,543:INFO:             mlxtend: 0.23.1
2025-06-09 22:06:40,543:INFO:       statsforecast: 1.5.0
2025-06-09 22:06:40,543:INFO:        tune_sklearn: Not installed
2025-06-09 22:06:40,543:INFO:                 ray: Not installed
2025-06-09 22:06:40,544:INFO:            hyperopt: 0.2.7
2025-06-09 22:06:40,544:INFO:              optuna: 4.3.0
2025-06-09 22:06:40,544:INFO:               skopt: 0.10.2
2025-06-09 22:06:40,544:INFO:              mlflow: 2.22.0
2025-06-09 22:06:40,544:INFO:              gradio: 3.50.2
2025-06-09 22:06:40,544:INFO:             fastapi: 0.115.12
2025-06-09 22:06:40,544:INFO:             uvicorn: 0.34.2
2025-06-09 22:06:40,544:INFO:              m2cgen: 0.10.0
2025-06-09 22:06:40,544:INFO:           evidently: 0.2.8
2025-06-09 22:06:40,544:INFO:               fugue: 0.8.6
2025-06-09 22:06:40,544:INFO:           streamlit: 1.45.1
2025-06-09 22:06:40,544:INFO:             prophet: Not installed
2025-06-09 22:06:40,544:INFO:None
2025-06-09 22:06:40,544:INFO:Set up data.
2025-06-09 22:06:40,551:INFO:Set up folding strategy.
2025-06-09 22:06:40,551:INFO:Set up train/test split.
2025-06-09 22:06:40,555:INFO:Set up index.
2025-06-09 22:06:40,555:INFO:Assigning column types.
2025-06-09 22:06:40,560:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-09 22:06:40,560:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,565:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:40,692:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:40,724:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,731:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,736:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,799:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,847:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:40,847:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:40,847:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-06-09 22:06:40,853:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,916:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:40,964:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:40,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-06-09 22:06:40,976:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,032:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,078:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,078:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-06-09 22:06:41,087:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,196:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,196:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,270:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,320:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,321:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,321:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-06-09 22:06:41,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,443:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,513:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,563:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,563:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,563:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,563:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-09 22:06:41,633:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,683:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-06-09 22:06:41,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,806:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:41,806:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-06-09 22:06:41,942:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:41,942:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:42,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:42,074:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:42,077:INFO:Preparing preprocessing pipeline...
2025-06-09 22:06:42,077:INFO:Set up simple imputation.
2025-06-09 22:06:42,079:INFO:Set up encoding of categorical features.
2025-06-09 22:06:42,129:INFO:Finished creating preprocessing pipeline.
2025-06-09 22:06:42,137:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-06-09 22:06:42,137:INFO:Creating final display dataframe.
2025-06-09 22:06:42,290:INFO:Setup _display_container:                     Description                          Value
0                    Session id                            202
1                        Target                      price_usd
2                   Target type                     Regression
3           Original data shape                       (800, 7)
4        Transformed data shape                      (800, 12)
5   Transformed train set shape                      (560, 12)
6    Transformed test set shape                      (240, 12)
7              Numeric features                              5
8          Categorical features                              1
9                    Preprocess                           True
10              Imputation type                         simple
11           Numeric imputation                           mean
12       Categorical imputation                           mode
13     Maximum one-hot encoding                             25
14              Encoding method                           None
15               Fold Generator                          KFold
16                  Fold Number                             10
17                     CPU Jobs                             -1
18                      Use GPU                          False
19               Log Experiment                   MlflowLogger
20              Experiment Name  prediccion_precio_propiedades
21                          USI                           ed60
2025-06-09 22:06:42,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:42,429:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:42,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-06-09 22:06:42,554:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-09 22:06:42,554:INFO:Logging experiment in loggers
2025-06-09 22:06:42,923:INFO:SubProcess save_model() called ==================================
2025-06-09 22:06:42,935:INFO:Initializing save_model()
2025-06-09 22:06:42,936:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), model_name=C:\Users\User\AppData\Local\Temp\tmp93okfg4o\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-09 22:06:42,936:INFO:Adding model into prep_pipe
2025-06-09 22:06:42,936:WARNING:Only Model saved as it was a pipeline.
2025-06-09 22:06:42,940:INFO:C:\Users\User\AppData\Local\Temp\tmp93okfg4o\Transformation Pipeline.pkl saved in current working directory
2025-06-09 22:06:42,946:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-06-09 22:06:42,946:INFO:save_model() successfully completed......................................
2025-06-09 22:06:43,044:INFO:SubProcess save_model() end ==================================
2025-06-09 22:06:43,177:INFO:setup() successfully completed in 4.58s...............
2025-06-09 22:06:43,177:INFO:Initializing compare_models()
2025-06-09 22:06:43,177:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-06-09 22:06:43,177:INFO:Checking exceptions
2025-06-09 22:06:43,179:INFO:Preparing display monitor
2025-06-09 22:06:43,184:INFO:Initializing Linear Regression
2025-06-09 22:06:43,184:INFO:Total runtime is 0.0 minutes
2025-06-09 22:06:43,184:INFO:SubProcess create_model() called ==================================
2025-06-09 22:06:43,184:INFO:Initializing create_model()
2025-06-09 22:06:43,184:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:06:43,184:INFO:Checking exceptions
2025-06-09 22:06:43,184:INFO:Importing libraries
2025-06-09 22:06:43,184:INFO:Copying training dataset
2025-06-09 22:06:43,187:INFO:Defining folds
2025-06-09 22:06:43,187:INFO:Declaring metric variables
2025-06-09 22:06:43,187:INFO:Importing untrained model
2025-06-09 22:06:43,188:INFO:Linear Regression Imported successfully
2025-06-09 22:06:43,188:INFO:Starting cross validation
2025-06-09 22:06:43,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:00,544:INFO:Calculating mean and std
2025-06-09 22:07:00,545:INFO:Creating metrics dataframe
2025-06-09 22:07:00,549:INFO:Uploading results into container
2025-06-09 22:07:00,549:INFO:Uploading model into container now
2025-06-09 22:07:00,550:INFO:_master_model_container: 1
2025-06-09 22:07:00,550:INFO:_display_container: 2
2025-06-09 22:07:00,550:INFO:LinearRegression(n_jobs=-1)
2025-06-09 22:07:00,550:INFO:create_model() successfully completed......................................
2025-06-09 22:07:00,669:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:00,669:INFO:Creating metrics dataframe
2025-06-09 22:07:00,673:INFO:Initializing Lasso Regression
2025-06-09 22:07:00,673:INFO:Total runtime is 0.29149401585261026 minutes
2025-06-09 22:07:00,673:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:00,673:INFO:Initializing create_model()
2025-06-09 22:07:00,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:00,673:INFO:Checking exceptions
2025-06-09 22:07:00,673:INFO:Importing libraries
2025-06-09 22:07:00,673:INFO:Copying training dataset
2025-06-09 22:07:00,677:INFO:Defining folds
2025-06-09 22:07:00,677:INFO:Declaring metric variables
2025-06-09 22:07:00,677:INFO:Importing untrained model
2025-06-09 22:07:00,678:INFO:Lasso Regression Imported successfully
2025-06-09 22:07:00,678:INFO:Starting cross validation
2025-06-09 22:07:00,679:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:00,916:INFO:Calculating mean and std
2025-06-09 22:07:00,917:INFO:Creating metrics dataframe
2025-06-09 22:07:00,920:INFO:Uploading results into container
2025-06-09 22:07:00,920:INFO:Uploading model into container now
2025-06-09 22:07:00,921:INFO:_master_model_container: 2
2025-06-09 22:07:00,921:INFO:_display_container: 2
2025-06-09 22:07:00,921:INFO:Lasso(random_state=202)
2025-06-09 22:07:00,921:INFO:create_model() successfully completed......................................
2025-06-09 22:07:01,030:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:01,030:INFO:Creating metrics dataframe
2025-06-09 22:07:01,035:INFO:Initializing Ridge Regression
2025-06-09 22:07:01,035:INFO:Total runtime is 0.29753220081329346 minutes
2025-06-09 22:07:01,035:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:01,035:INFO:Initializing create_model()
2025-06-09 22:07:01,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:01,035:INFO:Checking exceptions
2025-06-09 22:07:01,035:INFO:Importing libraries
2025-06-09 22:07:01,035:INFO:Copying training dataset
2025-06-09 22:07:01,040:INFO:Defining folds
2025-06-09 22:07:01,040:INFO:Declaring metric variables
2025-06-09 22:07:01,040:INFO:Importing untrained model
2025-06-09 22:07:01,040:INFO:Ridge Regression Imported successfully
2025-06-09 22:07:01,041:INFO:Starting cross validation
2025-06-09 22:07:01,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:01,264:INFO:Calculating mean and std
2025-06-09 22:07:01,265:INFO:Creating metrics dataframe
2025-06-09 22:07:01,269:INFO:Uploading results into container
2025-06-09 22:07:01,270:INFO:Uploading model into container now
2025-06-09 22:07:01,270:INFO:_master_model_container: 3
2025-06-09 22:07:01,271:INFO:_display_container: 2
2025-06-09 22:07:01,271:INFO:Ridge(random_state=202)
2025-06-09 22:07:01,271:INFO:create_model() successfully completed......................................
2025-06-09 22:07:01,388:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:01,388:INFO:Creating metrics dataframe
2025-06-09 22:07:01,394:INFO:Initializing Elastic Net
2025-06-09 22:07:01,394:INFO:Total runtime is 0.3035073757171631 minutes
2025-06-09 22:07:01,394:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:01,396:INFO:Initializing create_model()
2025-06-09 22:07:01,396:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:01,396:INFO:Checking exceptions
2025-06-09 22:07:01,396:INFO:Importing libraries
2025-06-09 22:07:01,396:INFO:Copying training dataset
2025-06-09 22:07:01,399:INFO:Defining folds
2025-06-09 22:07:01,399:INFO:Declaring metric variables
2025-06-09 22:07:01,399:INFO:Importing untrained model
2025-06-09 22:07:01,400:INFO:Elastic Net Imported successfully
2025-06-09 22:07:01,400:INFO:Starting cross validation
2025-06-09 22:07:01,401:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:01,633:INFO:Calculating mean and std
2025-06-09 22:07:01,634:INFO:Creating metrics dataframe
2025-06-09 22:07:01,639:INFO:Uploading results into container
2025-06-09 22:07:01,639:INFO:Uploading model into container now
2025-06-09 22:07:01,640:INFO:_master_model_container: 4
2025-06-09 22:07:01,640:INFO:_display_container: 2
2025-06-09 22:07:01,640:INFO:ElasticNet(random_state=202)
2025-06-09 22:07:01,640:INFO:create_model() successfully completed......................................
2025-06-09 22:07:01,756:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:01,756:INFO:Creating metrics dataframe
2025-06-09 22:07:01,762:INFO:Initializing Least Angle Regression
2025-06-09 22:07:01,762:INFO:Total runtime is 0.3096461256345113 minutes
2025-06-09 22:07:01,762:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:01,762:INFO:Initializing create_model()
2025-06-09 22:07:01,762:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:01,762:INFO:Checking exceptions
2025-06-09 22:07:01,762:INFO:Importing libraries
2025-06-09 22:07:01,762:INFO:Copying training dataset
2025-06-09 22:07:01,767:INFO:Defining folds
2025-06-09 22:07:01,767:INFO:Declaring metric variables
2025-06-09 22:07:01,767:INFO:Importing untrained model
2025-06-09 22:07:01,768:INFO:Least Angle Regression Imported successfully
2025-06-09 22:07:01,768:INFO:Starting cross validation
2025-06-09 22:07:01,769:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:02,027:INFO:Calculating mean and std
2025-06-09 22:07:02,027:INFO:Creating metrics dataframe
2025-06-09 22:07:02,032:INFO:Uploading results into container
2025-06-09 22:07:02,032:INFO:Uploading model into container now
2025-06-09 22:07:02,032:INFO:_master_model_container: 5
2025-06-09 22:07:02,032:INFO:_display_container: 2
2025-06-09 22:07:02,034:INFO:Lars(random_state=202)
2025-06-09 22:07:02,034:INFO:create_model() successfully completed......................................
2025-06-09 22:07:02,149:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:02,150:INFO:Creating metrics dataframe
2025-06-09 22:07:02,156:INFO:Initializing Lasso Least Angle Regression
2025-06-09 22:07:02,156:INFO:Total runtime is 0.3162006696065267 minutes
2025-06-09 22:07:02,156:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:02,156:INFO:Initializing create_model()
2025-06-09 22:07:02,156:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:02,156:INFO:Checking exceptions
2025-06-09 22:07:02,156:INFO:Importing libraries
2025-06-09 22:07:02,156:INFO:Copying training dataset
2025-06-09 22:07:02,160:INFO:Defining folds
2025-06-09 22:07:02,160:INFO:Declaring metric variables
2025-06-09 22:07:02,160:INFO:Importing untrained model
2025-06-09 22:07:02,161:INFO:Lasso Least Angle Regression Imported successfully
2025-06-09 22:07:02,161:INFO:Starting cross validation
2025-06-09 22:07:02,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:02,371:INFO:Calculating mean and std
2025-06-09 22:07:02,371:INFO:Creating metrics dataframe
2025-06-09 22:07:02,376:INFO:Uploading results into container
2025-06-09 22:07:02,376:INFO:Uploading model into container now
2025-06-09 22:07:02,376:INFO:_master_model_container: 6
2025-06-09 22:07:02,376:INFO:_display_container: 2
2025-06-09 22:07:02,377:INFO:LassoLars(random_state=202)
2025-06-09 22:07:02,377:INFO:create_model() successfully completed......................................
2025-06-09 22:07:02,479:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:02,479:INFO:Creating metrics dataframe
2025-06-09 22:07:02,483:INFO:Initializing Orthogonal Matching Pursuit
2025-06-09 22:07:02,483:INFO:Total runtime is 0.3216501752535502 minutes
2025-06-09 22:07:02,483:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:02,483:INFO:Initializing create_model()
2025-06-09 22:07:02,483:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:02,483:INFO:Checking exceptions
2025-06-09 22:07:02,483:INFO:Importing libraries
2025-06-09 22:07:02,483:INFO:Copying training dataset
2025-06-09 22:07:02,487:INFO:Defining folds
2025-06-09 22:07:02,487:INFO:Declaring metric variables
2025-06-09 22:07:02,487:INFO:Importing untrained model
2025-06-09 22:07:02,487:INFO:Orthogonal Matching Pursuit Imported successfully
2025-06-09 22:07:02,487:INFO:Starting cross validation
2025-06-09 22:07:02,488:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:02,681:INFO:Calculating mean and std
2025-06-09 22:07:02,682:INFO:Creating metrics dataframe
2025-06-09 22:07:02,685:INFO:Uploading results into container
2025-06-09 22:07:02,685:INFO:Uploading model into container now
2025-06-09 22:07:02,687:INFO:_master_model_container: 7
2025-06-09 22:07:02,687:INFO:_display_container: 2
2025-06-09 22:07:02,687:INFO:OrthogonalMatchingPursuit()
2025-06-09 22:07:02,687:INFO:create_model() successfully completed......................................
2025-06-09 22:07:02,791:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:02,791:INFO:Creating metrics dataframe
2025-06-09 22:07:02,796:INFO:Initializing Bayesian Ridge
2025-06-09 22:07:02,796:INFO:Total runtime is 0.32686755259831746 minutes
2025-06-09 22:07:02,796:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:02,796:INFO:Initializing create_model()
2025-06-09 22:07:02,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:02,796:INFO:Checking exceptions
2025-06-09 22:07:02,796:INFO:Importing libraries
2025-06-09 22:07:02,796:INFO:Copying training dataset
2025-06-09 22:07:02,800:INFO:Defining folds
2025-06-09 22:07:02,800:INFO:Declaring metric variables
2025-06-09 22:07:02,800:INFO:Importing untrained model
2025-06-09 22:07:02,801:INFO:Bayesian Ridge Imported successfully
2025-06-09 22:07:02,801:INFO:Starting cross validation
2025-06-09 22:07:02,802:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:03,022:INFO:Calculating mean and std
2025-06-09 22:07:03,023:INFO:Creating metrics dataframe
2025-06-09 22:07:03,027:INFO:Uploading results into container
2025-06-09 22:07:03,028:INFO:Uploading model into container now
2025-06-09 22:07:03,028:INFO:_master_model_container: 8
2025-06-09 22:07:03,029:INFO:_display_container: 2
2025-06-09 22:07:03,029:INFO:BayesianRidge()
2025-06-09 22:07:03,029:INFO:create_model() successfully completed......................................
2025-06-09 22:07:03,142:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:03,142:INFO:Creating metrics dataframe
2025-06-09 22:07:03,147:INFO:Initializing Passive Aggressive Regressor
2025-06-09 22:07:03,148:INFO:Total runtime is 0.3327351133028666 minutes
2025-06-09 22:07:03,148:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:03,148:INFO:Initializing create_model()
2025-06-09 22:07:03,148:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:03,148:INFO:Checking exceptions
2025-06-09 22:07:03,148:INFO:Importing libraries
2025-06-09 22:07:03,148:INFO:Copying training dataset
2025-06-09 22:07:03,152:INFO:Defining folds
2025-06-09 22:07:03,152:INFO:Declaring metric variables
2025-06-09 22:07:03,152:INFO:Importing untrained model
2025-06-09 22:07:03,153:INFO:Passive Aggressive Regressor Imported successfully
2025-06-09 22:07:03,153:INFO:Starting cross validation
2025-06-09 22:07:03,154:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:03,389:INFO:Calculating mean and std
2025-06-09 22:07:03,390:INFO:Creating metrics dataframe
2025-06-09 22:07:03,393:INFO:Uploading results into container
2025-06-09 22:07:03,394:INFO:Uploading model into container now
2025-06-09 22:07:03,394:INFO:_master_model_container: 9
2025-06-09 22:07:03,394:INFO:_display_container: 2
2025-06-09 22:07:03,395:INFO:PassiveAggressiveRegressor(random_state=202)
2025-06-09 22:07:03,395:INFO:create_model() successfully completed......................................
2025-06-09 22:07:03,508:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:03,508:INFO:Creating metrics dataframe
2025-06-09 22:07:03,513:INFO:Initializing Huber Regressor
2025-06-09 22:07:03,513:INFO:Total runtime is 0.3388194839159647 minutes
2025-06-09 22:07:03,513:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:03,513:INFO:Initializing create_model()
2025-06-09 22:07:03,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:03,513:INFO:Checking exceptions
2025-06-09 22:07:03,513:INFO:Importing libraries
2025-06-09 22:07:03,513:INFO:Copying training dataset
2025-06-09 22:07:03,517:INFO:Defining folds
2025-06-09 22:07:03,517:INFO:Declaring metric variables
2025-06-09 22:07:03,518:INFO:Importing untrained model
2025-06-09 22:07:03,518:INFO:Huber Regressor Imported successfully
2025-06-09 22:07:03,518:INFO:Starting cross validation
2025-06-09 22:07:03,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:03,686:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,686:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,687:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,701:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,701:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,706:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,713:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,744:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,835:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,849:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-06-09 22:07:03,889:INFO:Calculating mean and std
2025-06-09 22:07:03,890:INFO:Creating metrics dataframe
2025-06-09 22:07:03,894:INFO:Uploading results into container
2025-06-09 22:07:03,894:INFO:Uploading model into container now
2025-06-09 22:07:03,894:INFO:_master_model_container: 10
2025-06-09 22:07:03,896:INFO:_display_container: 2
2025-06-09 22:07:03,896:INFO:HuberRegressor()
2025-06-09 22:07:03,896:INFO:create_model() successfully completed......................................
2025-06-09 22:07:04,008:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:04,008:INFO:Creating metrics dataframe
2025-06-09 22:07:04,014:INFO:Initializing K Neighbors Regressor
2025-06-09 22:07:04,014:INFO:Total runtime is 0.3471739252408345 minutes
2025-06-09 22:07:04,014:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:04,014:INFO:Initializing create_model()
2025-06-09 22:07:04,014:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:04,014:INFO:Checking exceptions
2025-06-09 22:07:04,014:INFO:Importing libraries
2025-06-09 22:07:04,014:INFO:Copying training dataset
2025-06-09 22:07:04,019:INFO:Defining folds
2025-06-09 22:07:04,019:INFO:Declaring metric variables
2025-06-09 22:07:04,019:INFO:Importing untrained model
2025-06-09 22:07:04,020:INFO:K Neighbors Regressor Imported successfully
2025-06-09 22:07:04,020:INFO:Starting cross validation
2025-06-09 22:07:04,021:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:04,315:INFO:Calculating mean and std
2025-06-09 22:07:04,316:INFO:Creating metrics dataframe
2025-06-09 22:07:04,319:INFO:Uploading results into container
2025-06-09 22:07:04,320:INFO:Uploading model into container now
2025-06-09 22:07:04,320:INFO:_master_model_container: 11
2025-06-09 22:07:04,320:INFO:_display_container: 2
2025-06-09 22:07:04,321:INFO:KNeighborsRegressor(n_jobs=-1)
2025-06-09 22:07:04,321:INFO:create_model() successfully completed......................................
2025-06-09 22:07:04,429:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:04,429:INFO:Creating metrics dataframe
2025-06-09 22:07:04,433:INFO:Initializing Decision Tree Regressor
2025-06-09 22:07:04,433:INFO:Total runtime is 0.354159943262736 minutes
2025-06-09 22:07:04,433:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:04,433:INFO:Initializing create_model()
2025-06-09 22:07:04,433:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:04,433:INFO:Checking exceptions
2025-06-09 22:07:04,433:INFO:Importing libraries
2025-06-09 22:07:04,433:INFO:Copying training dataset
2025-06-09 22:07:04,437:INFO:Defining folds
2025-06-09 22:07:04,437:INFO:Declaring metric variables
2025-06-09 22:07:04,438:INFO:Importing untrained model
2025-06-09 22:07:04,438:INFO:Decision Tree Regressor Imported successfully
2025-06-09 22:07:04,438:INFO:Starting cross validation
2025-06-09 22:07:04,438:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:04,664:INFO:Calculating mean and std
2025-06-09 22:07:04,666:INFO:Creating metrics dataframe
2025-06-09 22:07:04,670:INFO:Uploading results into container
2025-06-09 22:07:04,670:INFO:Uploading model into container now
2025-06-09 22:07:04,671:INFO:_master_model_container: 12
2025-06-09 22:07:04,671:INFO:_display_container: 2
2025-06-09 22:07:04,671:INFO:DecisionTreeRegressor(random_state=202)
2025-06-09 22:07:04,671:INFO:create_model() successfully completed......................................
2025-06-09 22:07:04,790:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:04,790:INFO:Creating metrics dataframe
2025-06-09 22:07:04,796:INFO:Initializing Random Forest Regressor
2025-06-09 22:07:04,796:INFO:Total runtime is 0.36020001173019406 minutes
2025-06-09 22:07:04,796:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:04,797:INFO:Initializing create_model()
2025-06-09 22:07:04,797:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:04,797:INFO:Checking exceptions
2025-06-09 22:07:04,797:INFO:Importing libraries
2025-06-09 22:07:04,797:INFO:Copying training dataset
2025-06-09 22:07:04,801:INFO:Defining folds
2025-06-09 22:07:04,801:INFO:Declaring metric variables
2025-06-09 22:07:04,801:INFO:Importing untrained model
2025-06-09 22:07:04,802:INFO:Random Forest Regressor Imported successfully
2025-06-09 22:07:04,802:INFO:Starting cross validation
2025-06-09 22:07:04,803:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:06,346:INFO:Calculating mean and std
2025-06-09 22:07:06,347:INFO:Creating metrics dataframe
2025-06-09 22:07:06,351:INFO:Uploading results into container
2025-06-09 22:07:06,351:INFO:Uploading model into container now
2025-06-09 22:07:06,352:INFO:_master_model_container: 13
2025-06-09 22:07:06,352:INFO:_display_container: 2
2025-06-09 22:07:06,353:INFO:RandomForestRegressor(n_jobs=-1, random_state=202)
2025-06-09 22:07:06,353:INFO:create_model() successfully completed......................................
2025-06-09 22:07:06,477:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:06,478:INFO:Creating metrics dataframe
2025-06-09 22:07:06,484:INFO:Initializing Extra Trees Regressor
2025-06-09 22:07:06,484:INFO:Total runtime is 0.38834218978881835 minutes
2025-06-09 22:07:06,484:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:06,484:INFO:Initializing create_model()
2025-06-09 22:07:06,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:06,484:INFO:Checking exceptions
2025-06-09 22:07:06,484:INFO:Importing libraries
2025-06-09 22:07:06,484:INFO:Copying training dataset
2025-06-09 22:07:06,488:INFO:Defining folds
2025-06-09 22:07:06,489:INFO:Declaring metric variables
2025-06-09 22:07:06,489:INFO:Importing untrained model
2025-06-09 22:07:06,490:INFO:Extra Trees Regressor Imported successfully
2025-06-09 22:07:06,490:INFO:Starting cross validation
2025-06-09 22:07:06,491:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:07,678:INFO:Calculating mean and std
2025-06-09 22:07:07,679:INFO:Creating metrics dataframe
2025-06-09 22:07:07,683:INFO:Uploading results into container
2025-06-09 22:07:07,684:INFO:Uploading model into container now
2025-06-09 22:07:07,684:INFO:_master_model_container: 14
2025-06-09 22:07:07,684:INFO:_display_container: 2
2025-06-09 22:07:07,684:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=202)
2025-06-09 22:07:07,684:INFO:create_model() successfully completed......................................
2025-06-09 22:07:07,801:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:07,801:INFO:Creating metrics dataframe
2025-06-09 22:07:07,809:INFO:Initializing AdaBoost Regressor
2025-06-09 22:07:07,810:INFO:Total runtime is 0.41044750610987346 minutes
2025-06-09 22:07:07,810:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:07,810:INFO:Initializing create_model()
2025-06-09 22:07:07,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:07,811:INFO:Checking exceptions
2025-06-09 22:07:07,811:INFO:Importing libraries
2025-06-09 22:07:07,811:INFO:Copying training dataset
2025-06-09 22:07:07,817:INFO:Defining folds
2025-06-09 22:07:07,817:INFO:Declaring metric variables
2025-06-09 22:07:07,817:INFO:Importing untrained model
2025-06-09 22:07:07,818:INFO:AdaBoost Regressor Imported successfully
2025-06-09 22:07:07,818:INFO:Starting cross validation
2025-06-09 22:07:07,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:08,422:INFO:Calculating mean and std
2025-06-09 22:07:08,423:INFO:Creating metrics dataframe
2025-06-09 22:07:08,427:INFO:Uploading results into container
2025-06-09 22:07:08,427:INFO:Uploading model into container now
2025-06-09 22:07:08,428:INFO:_master_model_container: 15
2025-06-09 22:07:08,428:INFO:_display_container: 2
2025-06-09 22:07:08,428:INFO:AdaBoostRegressor(random_state=202)
2025-06-09 22:07:08,428:INFO:create_model() successfully completed......................................
2025-06-09 22:07:08,538:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:08,538:INFO:Creating metrics dataframe
2025-06-09 22:07:08,544:INFO:Initializing Gradient Boosting Regressor
2025-06-09 22:07:08,544:INFO:Total runtime is 0.4226799368858338 minutes
2025-06-09 22:07:08,544:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:08,545:INFO:Initializing create_model()
2025-06-09 22:07:08,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:08,545:INFO:Checking exceptions
2025-06-09 22:07:08,545:INFO:Importing libraries
2025-06-09 22:07:08,545:INFO:Copying training dataset
2025-06-09 22:07:08,550:INFO:Defining folds
2025-06-09 22:07:08,550:INFO:Declaring metric variables
2025-06-09 22:07:08,550:INFO:Importing untrained model
2025-06-09 22:07:08,551:INFO:Gradient Boosting Regressor Imported successfully
2025-06-09 22:07:08,551:INFO:Starting cross validation
2025-06-09 22:07:08,552:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:09,177:INFO:Calculating mean and std
2025-06-09 22:07:09,177:INFO:Creating metrics dataframe
2025-06-09 22:07:09,182:INFO:Uploading results into container
2025-06-09 22:07:09,183:INFO:Uploading model into container now
2025-06-09 22:07:09,183:INFO:_master_model_container: 16
2025-06-09 22:07:09,183:INFO:_display_container: 2
2025-06-09 22:07:09,183:INFO:GradientBoostingRegressor(random_state=202)
2025-06-09 22:07:09,183:INFO:create_model() successfully completed......................................
2025-06-09 22:07:09,316:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:09,316:INFO:Creating metrics dataframe
2025-06-09 22:07:09,323:INFO:Initializing Light Gradient Boosting Machine
2025-06-09 22:07:09,324:INFO:Total runtime is 0.4356508771578471 minutes
2025-06-09 22:07:09,324:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:09,324:INFO:Initializing create_model()
2025-06-09 22:07:09,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:09,324:INFO:Checking exceptions
2025-06-09 22:07:09,324:INFO:Importing libraries
2025-06-09 22:07:09,324:INFO:Copying training dataset
2025-06-09 22:07:09,329:INFO:Defining folds
2025-06-09 22:07:09,329:INFO:Declaring metric variables
2025-06-09 22:07:09,329:INFO:Importing untrained model
2025-06-09 22:07:09,330:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-09 22:07:09,331:INFO:Starting cross validation
2025-06-09 22:07:09,333:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:11,333:INFO:Calculating mean and std
2025-06-09 22:07:11,334:INFO:Creating metrics dataframe
2025-06-09 22:07:11,339:INFO:Uploading results into container
2025-06-09 22:07:11,340:INFO:Uploading model into container now
2025-06-09 22:07:11,341:INFO:_master_model_container: 17
2025-06-09 22:07:11,341:INFO:_display_container: 2
2025-06-09 22:07:11,342:INFO:LGBMRegressor(n_jobs=-1, random_state=202)
2025-06-09 22:07:11,342:INFO:create_model() successfully completed......................................
2025-06-09 22:07:11,490:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:11,491:INFO:Creating metrics dataframe
2025-06-09 22:07:11,497:INFO:Initializing CatBoost Regressor
2025-06-09 22:07:11,497:INFO:Total runtime is 0.47188666264216106 minutes
2025-06-09 22:07:11,497:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:11,498:INFO:Initializing create_model()
2025-06-09 22:07:11,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:11,498:INFO:Checking exceptions
2025-06-09 22:07:11,498:INFO:Importing libraries
2025-06-09 22:07:11,498:INFO:Copying training dataset
2025-06-09 22:07:11,502:INFO:Defining folds
2025-06-09 22:07:11,502:INFO:Declaring metric variables
2025-06-09 22:07:11,503:INFO:Importing untrained model
2025-06-09 22:07:11,503:INFO:CatBoost Regressor Imported successfully
2025-06-09 22:07:11,503:INFO:Starting cross validation
2025-06-09 22:07:11,505:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:20,179:INFO:Calculating mean and std
2025-06-09 22:07:20,181:INFO:Creating metrics dataframe
2025-06-09 22:07:20,187:INFO:Uploading results into container
2025-06-09 22:07:20,189:INFO:Uploading model into container now
2025-06-09 22:07:20,189:INFO:_master_model_container: 18
2025-06-09 22:07:20,189:INFO:_display_container: 2
2025-06-09 22:07:20,191:INFO:<catboost.core.CatBoostRegressor object at 0x000001F55BA52710>
2025-06-09 22:07:20,191:INFO:create_model() successfully completed......................................
2025-06-09 22:07:20,465:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:20,465:INFO:Creating metrics dataframe
2025-06-09 22:07:20,479:INFO:Initializing Dummy Regressor
2025-06-09 22:07:20,479:INFO:Total runtime is 0.6215964953104656 minutes
2025-06-09 22:07:20,480:INFO:SubProcess create_model() called ==================================
2025-06-09 22:07:20,480:INFO:Initializing create_model()
2025-06-09 22:07:20,480:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F55B30A610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:20,480:INFO:Checking exceptions
2025-06-09 22:07:20,480:INFO:Importing libraries
2025-06-09 22:07:20,480:INFO:Copying training dataset
2025-06-09 22:07:20,489:INFO:Defining folds
2025-06-09 22:07:20,489:INFO:Declaring metric variables
2025-06-09 22:07:20,490:INFO:Importing untrained model
2025-06-09 22:07:20,490:INFO:Dummy Regressor Imported successfully
2025-06-09 22:07:20,491:INFO:Starting cross validation
2025-06-09 22:07:20,492:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-09 22:07:20,793:INFO:Calculating mean and std
2025-06-09 22:07:20,795:INFO:Creating metrics dataframe
2025-06-09 22:07:20,800:INFO:Uploading results into container
2025-06-09 22:07:20,800:INFO:Uploading model into container now
2025-06-09 22:07:20,801:INFO:_master_model_container: 19
2025-06-09 22:07:20,801:INFO:_display_container: 2
2025-06-09 22:07:20,801:INFO:DummyRegressor()
2025-06-09 22:07:20,801:INFO:create_model() successfully completed......................................
2025-06-09 22:07:20,942:INFO:SubProcess create_model() end ==================================
2025-06-09 22:07:20,942:INFO:Creating metrics dataframe
2025-06-09 22:07:20,951:INFO:Initializing create_model()
2025-06-09 22:07:20,951:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=Ridge(random_state=202), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-09 22:07:20,953:INFO:Checking exceptions
2025-06-09 22:07:20,953:INFO:Importing libraries
2025-06-09 22:07:20,954:INFO:Copying training dataset
2025-06-09 22:07:20,957:INFO:Defining folds
2025-06-09 22:07:20,957:INFO:Declaring metric variables
2025-06-09 22:07:20,957:INFO:Importing untrained model
2025-06-09 22:07:20,957:INFO:Declaring custom model
2025-06-09 22:07:20,958:INFO:Ridge Regression Imported successfully
2025-06-09 22:07:20,959:INFO:Cross validation set to False
2025-06-09 22:07:20,960:INFO:Fitting Model
2025-06-09 22:07:21,003:INFO:Ridge(random_state=202)
2025-06-09 22:07:21,004:INFO:create_model() successfully completed......................................
2025-06-09 22:07:21,106:INFO:Creating Dashboard logs
2025-06-09 22:07:21,108:INFO:Model: Ridge Regression
2025-06-09 22:07:21,237:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 202, 'solver': 'auto', 'tol': 0.0001}
2025-06-09 22:07:21,563:INFO:Initializing predict_model()
2025-06-09 22:07:21,563:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F5564AAC90>, estimator=Ridge(random_state=202), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F559EF37E0>)
2025-06-09 22:07:21,563:INFO:Checking exceptions
2025-06-09 22:07:21,563:INFO:Preloading libraries
2025-06-09 22:07:21,755:WARNING:C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2025-06-09 22:07:21,938:INFO:Creating Dashboard logs
2025-06-09 22:07:21,939:INFO:Model: Bayesian Ridge
2025-06-09 22:07:22,031:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'n_iter': 300, 'tol': 0.001, 'verbose': False}
2025-06-09 22:07:22,529:INFO:Creating Dashboard logs
2025-06-09 22:07:22,530:INFO:Model: Linear Regression
2025-06-09 22:07:22,620:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2025-06-09 22:07:23,032:INFO:Creating Dashboard logs
2025-06-09 22:07:23,032:INFO:Model: Lasso Regression
2025-06-09 22:07:23,114:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 202, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-09 22:07:23,565:INFO:Creating Dashboard logs
2025-06-09 22:07:23,567:INFO:Model: Least Angle Regression
2025-06-09 22:07:23,670:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'normalize': 'deprecated', 'precompute': 'auto', 'random_state': 202, 'verbose': False}
2025-06-09 22:07:24,377:INFO:Creating Dashboard logs
2025-06-09 22:07:24,377:INFO:Model: Lasso Least Angle Regression
2025-06-09 22:07:24,492:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'normalize': 'deprecated', 'positive': False, 'precompute': 'auto', 'random_state': 202, 'verbose': False}
2025-06-09 22:07:25,087:INFO:Creating Dashboard logs
2025-06-09 22:07:25,087:INFO:Model: Huber Regressor
2025-06-09 22:07:25,183:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2025-06-09 22:07:25,692:INFO:Creating Dashboard logs
2025-06-09 22:07:25,692:INFO:Model: CatBoost Regressor
2025-06-09 22:07:25,797:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-06-09 22:07:25,797:INFO:Logged params: {}
2025-06-09 22:07:26,285:INFO:Creating Dashboard logs
2025-06-09 22:07:26,285:INFO:Model: Elastic Net
2025-06-09 22:07:26,379:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 202, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2025-06-09 22:07:26,814:INFO:Creating Dashboard logs
2025-06-09 22:07:26,815:INFO:Model: Gradient Boosting Regressor
2025-06-09 22:07:26,904:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 202, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-09 22:07:27,451:INFO:Creating Dashboard logs
2025-06-09 22:07:27,452:INFO:Model: Light Gradient Boosting Machine
2025-06-09 22:07:27,621:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 202, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-06-09 22:07:28,421:INFO:Creating Dashboard logs
2025-06-09 22:07:28,422:INFO:Model: Extra Trees Regressor
2025-06-09 22:07:28,561:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 202, 'verbose': 0, 'warm_start': False}
2025-06-09 22:07:29,135:INFO:Creating Dashboard logs
2025-06-09 22:07:29,135:INFO:Model: Random Forest Regressor
2025-06-09 22:07:29,241:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 202, 'verbose': 0, 'warm_start': False}
2025-06-09 22:07:29,711:INFO:Creating Dashboard logs
2025-06-09 22:07:29,711:INFO:Model: AdaBoost Regressor
2025-06-09 22:07:29,819:INFO:Logged params: {'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 202}
2025-06-09 22:07:30,295:INFO:Creating Dashboard logs
2025-06-09 22:07:30,296:INFO:Model: Passive Aggressive Regressor
2025-06-09 22:07:30,421:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 202, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-06-09 22:07:30,900:INFO:Creating Dashboard logs
2025-06-09 22:07:30,900:INFO:Model: Orthogonal Matching Pursuit
2025-06-09 22:07:31,011:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'normalize': 'deprecated', 'precompute': 'auto', 'tol': None}
2025-06-09 22:07:31,612:INFO:Creating Dashboard logs
2025-06-09 22:07:31,612:INFO:Model: K Neighbors Regressor
2025-06-09 22:07:31,761:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-06-09 22:07:32,406:INFO:Creating Dashboard logs
2025-06-09 22:07:32,407:INFO:Model: Decision Tree Regressor
2025-06-09 22:07:32,550:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 202, 'splitter': 'best'}
2025-06-09 22:07:33,060:INFO:Creating Dashboard logs
2025-06-09 22:07:33,061:INFO:Model: Dummy Regressor
2025-06-09 22:07:33,162:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2025-06-09 22:07:33,651:INFO:_master_model_container: 19
2025-06-09 22:07:33,651:INFO:_display_container: 2
2025-06-09 22:07:33,651:INFO:Ridge(random_state=202)
2025-06-09 22:07:33,651:INFO:compare_models() successfully completed......................................
2025-06-09 22:07:33,657:INFO:Initializing save_model()
2025-06-09 22:07:33,657:INFO:save_model(model=Ridge(random_state=202), model_name=house_price_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-06-09 22:07:33,657:INFO:Adding model into prep_pipe
2025-06-09 22:07:33,661:INFO:house_price_model.pkl saved in current working directory
2025-06-09 22:07:33,669:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', Ridge(random_state=202))])
2025-06-09 22:07:33,669:INFO:save_model() successfully completed......................................
2025-06-09 22:10:26,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:10:26,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:10:26,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:10:26,570:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-09 22:10:26,753:INFO:Initializing load_model()
2025-06-09 22:10:26,754:INFO:load_model(model_name=house_price_model, platform=None, authentication=None, verbose=True)
2025-06-09 22:11:45,405:INFO:Initializing predict_model()
2025-06-09 22:11:45,406:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002677C1C1290>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', Ridge(random_state=202))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002677C2E6CA0>)
2025-06-09 22:11:45,406:INFO:Checking exceptions
2025-06-09 22:11:45,406:INFO:Preloading libraries
2025-06-09 22:11:45,406:INFO:Set up data.
2025-06-09 22:11:45,412:INFO:Set up index.
2025-06-09 22:15:55,653:INFO:Initializing predict_model()
2025-06-09 22:15:55,653:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002677A187350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['area_m2', 'bedrooms', 'bathrooms',
                                             'parking_spaces', 'age_years'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['district'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['district'],
                                    transformer=OneHotEncoder(cols=['district'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('trained_model', Ridge(random_state=202))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026752893CE0>)
2025-06-09 22:15:55,654:INFO:Checking exceptions
2025-06-09 22:15:55,654:INFO:Preloading libraries
2025-06-09 22:15:55,654:INFO:Set up data.
2025-06-09 22:15:55,655:INFO:Set up index.
